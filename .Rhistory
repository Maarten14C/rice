load_all(ri)
tmp <- find.shells(53, -11)
load_all(ri)
tmp <- find.shells(53, -11)
load_all(ri)
tmp <- find.shells(53, -11)
load_all(ri)
tmp <- find.shells(53, -11)
load_all(ri)
tmp <- find.shells(53, -11)
load_all(ri)
load_all(ri)
tmp <- find.shells(53, -11)
load_all(ri)
tmp <- find.shells(53, -11)
remove.packages('rnaturalearth')
tmp <- find.shells(53, -11)
remove.packages('rnaturalearth')
load_all(ri)
tmp <- find.shells(53, -11)
load_all(ri)
tmp <- find.shells(53, -11)
load_all(ri)
tmp <- find.shells(53, -11)
tmp <- find.shells(0, 50)
load_all(ri)
tmp <- find.shells(0, 50)
load_all(ri)
tmp <- find.shells(0, 50)
load_all(ri)
tmp <- find.shells(0, 50)
install.packages('rnaturalearth')
tmp <- find.shells(0, 50)
sessionInfo()
sf %in% sessionInfo()
"sf" %in% sessionInfo()
"rice" %in% sessionInfo()
"rice" %in% search()
require(rice)
"rice" %in% search()
"sessionInfo()
sessionInfo()
"maps" %in% search()
library(maps)
"maps" %in% search()
tmp <- find.shells(0, 50)
if (requireNamespace("ggplot2", quietly = TRUE)) {
message("ggplot2 is available")
} else {
message("ggplot2 is not available")
}
t
head(tmp)
load_all(ri)
tmp <- find.shells(0, 50)
remove.packages('rnaturalearth')
tmp <- find.shells(0, 50)
load_all(ri)
tmp <- find.shells(0, 50)
tmp <- find.shells(0, 50)
tmp <- map.shells()
tmp <- find.shells(0, 50)
tmp <- find.shells(0, 50)
load_all(ri)
tmp <- find.shells(0, 50)
tmp <- map.shells()
load_all(ri)
tmp <- map.shells()
install.packages('rnaturalearth')
tmp <- map.shells()
tmp <- find.shells(0, 50)
load_all(ri)
remove.packages('rnaturalearth')
tmp <- find.shells(0, 50)
install.packages('rnaturalearth')
tmp <- find.shells(0, 50)
remove.packages('rnaturalearth')
load_all(ri)
tmp <- find.shells(0, 50)
tmp <- map.shells()
install.packages('rnaturalearth')
tmp <- map.shells()
?map
devtools::install_github(“maarten14C/rintcal”)
devtools::install_github("maarten14C/rintcal")
find.shells(5,54)
find.shells(-20,54)
find.shells(-28,54)
find.shells(-28,24)
find.shells(-80,24)
find.shells(-90,24)
find.shells(-90,20)
gertwd()
getwd()
ri
require(devtools)
check(ri)
install.packages('rnaturalearth')
check(ri)
draw.ccurve(1600, 2020, BCAD=TRUE, cc2='nh1')
tmp <- ccurve()
tmp <- ccurve('nh1')
ccurve
tmp <- ccurve('nh1')
require(rintcal)
tmp <- ccurve('nh1')
reload(rintcal)
reload('rintcal')
reload('~/Dropbox/devsoftware/rintcal')
reload('~/Dropbox/devsoftware/rintcal')
q()
tmp <- ccurve('nh1')
require(rintcal)
tmp <- ccurve('nh1')
tmp
require(rice)
tmp <- ccurve('nh1')
dat(shells)
data(shells)
installed.packages()
ri
check(ri)
require(devtools)
check(ri)
x <- seq(0, 55e3, length=1e3)
cc <- calBPtoC14(x)
cc
x <- seq(0, 55e3, length=1e3)
cc <- calBPtoC14(x)
x <- seq(0, 55e3, length=1e3)
cc <- calBPtoC14(x)
Dcc <- calBPtoD14C(x)
par(mar=c(4,3,1,3), bty="l")
plot(x/1e3, Dcc[,1]+Dcc[,2], type="l", xlab="kcal BP", ylab="")
mtext(expression(paste(Delta, ""^{14}, "C")), 2, 1.7)
lines(x/1e3, Dcc[,1]-Dcc[,2])
par(new=TRUE)
plot(x/1e3, (cc[,1]-cc[,2])/1e3, type="l", xaxt="n", yaxt="n", col=4, xlab="", ylab="")
lines(x/1e3, (cc[,1]+cc[,2])/1e3, col=4)
mtext(expression(paste(""^{14}, "C kBP")), 4, 2, col=4)
axis(4, col=4, col.axis=4, col.ticks=4)
cc
cc
dim(cc)
x <- seq(0, 55e3, length=1e3)
cc <- calBPtoC14(x)
cc <- cbind(cc)
plot(x/1e3, (cc[,1]-cc[,2])/1e3, type="l", xaxt="n", yaxt="n", col=4, xlab="", ylab="")
lines(x/1e3, (cc[,1]+cc[,2])/1e3, col=4)
q()
require(rintcal)
check(ri)
require(devtools)
chekc()
check()
check(ri)
check(ri)
document(ri)
document(ri)
check(ri)
ri
getwd()
check("~/Dropbox/devsoftware/rbacon")
q()
require(rice)
x <- 0:1000
prob <- dnorm(x, 500,20)
dst <- cbind(x, prob)
hpd(dst)
require(devtools)
p.range(2800, 2400, 2450, 20)
cal
load_all(ri)
p.range(2800, 2400, 2450, 20)
cal
hpd(cal)
p.range(2521, 2365, 2450, 20)
p.range(2698, 2634, 2450, 20)
hpd(cal)
hpd(cal, age.round=5, prob.round=4, every=.01)
p.range(2698.61, 2633.88, 2450, 20)
p.range(2521.32, 2364.12, 2450, 20)
hpd(cal, every=.01)
p.range(2521, 2364, 2450, 20)
hpd(cal, age.round=5, prob.round=4, every=.1)
p.range(2521, 2364, 2450, 20)
hpd
document(ri)
document(ri)
load_all(ri)
p.range(2521, 2364, 2450, 20)
hpd(cal, age.round=5, prob.round=4, every=.1)
hpd(cal, age.round=5, prob.round=4, every=.1)
hpd(cal, age.round=5, prob.round=4)
hpd(cal, age.round=5, prob.round=4)
hpd(cal, age.round=5, prob.round=4)
hpd(cal, age.round=5, prob.round=4, every=1)
hpd(cal, age.round=5, prob.round=4, every=1)
tmp <- Sys.time();hpd(cal, age.round=5, prob.round=4, every=1);Sys.time()-tmp
tmp <- Sys.time();hpd(cal, age.round=5, prob.round=4, every=1);Sys.time()-tmp
tmp <- Sys.time();hpd(cal, age.round=5, prob.round=4);Sys.time()-tmp
tmp <- Sys.time();hpd(cal, age.round=5, prob.round=4);Sys.time()-tmp
tmp <- Sys.time();hpd(cal, age.round=5, prob.round=4);Sys.time()-tmp
build_vignettes(ri)
build_vignettes(ri)
as.one(shroud$y,shroud$er)
log10(0)
log10(1)
log10(2)
log10(3)
tmp <- Sys.time();hpd(cal, age.round=5, prob.round=4, every=1);Sys.time()-tmp
load_all(ri)
tmp <- Sys.time();hpd(cal, age.round=5, prob.round=4, every=1);Sys.time()-tmp
tmp <- Sys.time();hpd(cal, age.round=5, prob.round=4, every=1);Sys.time()-tmp
tmp <- Sys.time();hpd(cal, age.round=5, prob.round=4, every=1);Sys.time()-tmp
build_vignettes(ri)
build_vignettes(ri)
tmp <- Sys.time();rnorm(1e6);Sys.time()-tmp
tmp <- Sys.time(); tmp <- rnorm(1e6);Sys.time()-tmp
tmp <- Sys.time(); tmp <- rnorm(1e6);  Sys.time()-tmp
tmp <- Sys.time(); tmp2 <- rnorm(1e6);  Sys.time()-tmp
tmp <- Sys.time(); tmp2 <- rnorm(1e6);  Sys.time()-tmp
tmp <- Sys.time(); tmp2 <- rnorm(1e6);  Sys.time()-tmp
tmp <- Sys.time(); tmp2 <- repeat(0,1e6);  Sys.time()-tmp
repeat
?repeat
?repeat
?rp
tmp <- Sys.time(); tmp2 <- rep(0,1e6);  Sys.time()-tmp
tmp <- Sys.time(); tmp2 <- rep(0,1e6);  Sys.time()-tmp
load_all(ri)
contaminate(5000, 20, 1, 0, 1)
sd(0)
mean(0)
load_all(ri)
contaminate(5000, 20, 1, 0, 1)
dev.off()
contaminate(5000, 20, 1, 0, 1)
contaminate(5000, 0, 1, 0, 1, 0)
contaminate(66e6, 1e6, 1, 0, 1)
contaminate(66e6, 1e6, 1, 0, 1)
contaminate(66e6, 0, 1, 0, 1)
contaminate(66e6, 7, 1, 0, 1)
contaminate(66e6, 7, 1, .1, 1)
contaminate(66e6, 0, 1, 0, 1)
load_all(ri)
contaminate(66e6, 0, 1, 0, 1)
sd
sd(0)
sd(0,T)
sd(0,F)
min(0,sd(0))
max(0,sd(0))
load_all(ri)
contaminate(66e6, 0, 1, 0, 1)
contaminate(66e6, 0, 1, 0, 1, MC=F)
contaminate(66e6, 0, 1, 0, 1, MC=F)
tmp <- Sys.time(); contaminate(66e6, 0, 1, 0, 1, MC=F); Sys.time()-tmp
tmp <- Sys.time(); contaminate(66e6, 0, 1, 0, 1, MC=F); Sys.time()-tmp
tmp <- Sys.time(); contaminate(66e6, 0, 1, 0, 1, MC=F); Sys.time()-tmp
tmp <- Sys.time(); contaminate(66e6, 0, 1, 0, 1, MC=F); Sys.time()-tmp
tmp <- Sys.time(); contaminate(66e6, 0, 1, 0, 1, MC=T); Sys.time()-tmp
tmp <- Sys.time(); contaminate(66e6, 0, 1, 0, 1, MC=T); Sys.time()-tmp
tmp <- Sys.time(); contaminate(66e6, 0, 1, 0, 1, MC=T); Sys.time()-tmp
tmp <- Sys.time(); contaminate(66e6, 0, 1, 0, 1, MC=F); Sys.time()-tmp
tmp <- Sys.time(); contaminate(66e6, 0, 1, 0, 1, MC=F); Sys.time()-tmp
tmp <- Sys.time(); contaminate(66e6, 0, 1, 0, 1, MC=F); Sys.time()-tmp
tmp <- Sys.time(); contaminate(66e6, 0, 1, 0, 1, MC=T); Sys.time()-tmp
tmp <- Sys.time(); contaminate(66e6, 0, 1, 0, 1, MC=T); Sys.time()-tmp
contaminate(c(66e6,3000), 0, 1, 0, 1, MC=F)
contaminate(c(66e6,3000), 0, 1, 0, 1, MC=T)
load_all(ri)
contaminate(c(66e6,3000), 0, 1, 0, 1, MC=T)
load_all(ri)
contaminate(c(66e6,3000), 0, 1, 0, 1, MC=T)
contaminate(c(66e6,3000), 0, 1, 0, 1, MC=F)
er
er <- rep(0, 100)
all(er) == 0
all(er)
all(er==0)
load_all(ri)
contaminate(c(66e6,3000), 0, 1, 0, 1, MC=F)
contaminate(c(66e6,3000), 5, 1, 0, 1, MC=F)
load_all(ri)
contaminate(c(66e6,3000), 5, 1, 0, 1, MC=F)
load_all(ri)
contaminate(c(66e6,3000), 5, 1, 0, 1, MC=F)
contaminate(c(66e6,3000), c(10,5), 1, 0, 1, MC=F)
load_all(ri)
clean(5000, 20, 1, 0, 1, 0)
load_all(ri)
load_all(ri)
clean(5000, 20, 1, 0, 1, 0)
clean(5000, 0, 1, 0, 1, 0)
clean(5000, 20, 1, .20, 1, 0)
clean(5000, 20, 1, .20, 1, .20)
clean(5000, 20, 1, .20, 1, c(.10,.20))
load_all(ri)
muck(600, 30, 2000, 0, 1, .01)
muck(600, 0, 2000, 0, 1, 0)
muck(600, 60, 2000, 200, 1, .05)
draw.contamination()
dev.off()
draw.contamination()
load_all(ri)
muck(600, 60, 2000, 200, 1, .05)
check(ri)
muck(591, 30, BCADtoC14(40)[,1], 0, 1)
load_all(ri)
muck(591, 30, BCADtoC14(40)[,1], 0, 1)
build_vignettes(ri)
check(ri)
rhub::rhub_check(ri)
setwd("~/Dropbox/devsoftware/rice")
rhub::rhub_check()
document()
rhub::rhub_check()
build()
build()
document()
rhub::rhub_check()
document()
document()
build()
build()
rhub::rhub_check()
ihave <- requireNamespace()
ihave <- Namespace()
?requireNamespace
requireNamespace
?requireNamespace
install.packages("rcmdcheck")
library(rcmdcheck)
rcmdcheck(args=c("--as-cran"))
rcmdcheck(args=c("--as-cran"))
rcmdcheck(args=c("--as-cran"))
rcmdcheck(args=c("--as-cran"))
ocean.map()
UK <- find.shells(0, 55, scale="medium")
dev.off()
UK <- find.shells(0, 55, scale="medium")
check()
check()
check()
rcmdcheck(args=c("--as-cran"))
rcmdcheck(args=c("--as-cran"))
check()
check()
check()
rcmdcheck(args=c("--as-cran"))
check()
check()
?requireNamespace
rcmdcheck(args=c("--as-cran"))
rcmdcheck(args=c("--as-cran"))
rcmdcheck(args=c("--as-cran"))
rcmdcheck(args=c("--as-cran"))
rcmdcheck(args=c("--as-cran"))
check()
check()
check()
installed.packages()
check()
check()
check()
check()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
map.shells <- function(S=48,W=-15, N=62, E=5, colour='dR', rainbow=FALSE, size=2, scale=c(), mincol="yellow", maxcol="red", symbol='feeding', symbol.legend=TRUE, ocean.col="aliceblue", land.col=rgb(0, 0.5, 0., 0.6)) {
lon <- lat <- NULL # to get rid of subsequent ggplot2-related warnings
shells <- get("shells", envir = .GlobalEnv)
shells[[symbol]] <- as.factor(shells[[symbol]])
sel <- shells[shells$lon>=W & shells$lon<=E & shells$lat>=S & shells$lat <= N,]
p <- ocean.map(S, W, N, E, scale, ocean.col, land.col)
if(length(p) == 0) { # then rnaturalearth is not installed, so we plot a basic map instead
padding <- 1
maps::map(xlim=c(W-padding, E+padding), ylim=c(S-padding, N+padding), fill = TRUE, col = land.col, bg = ocean.col)
color_scale <- grDevices::colorRampPalette(c("yellow", "red"))(100)
cols <- color_scale[as.numeric(cut(sel[,5], breaks = 100))]  # Assign colors based on the value
points(sel[,1], sel[,2], col=cols, pch=20)
} else {
if(symbol.legend)
p <- p +
geom_point(data=sel, aes(x=lon, y=lat, color=!!sym(colour), shape=!!sym(symbol)), size=size, alpha=.8) else
p <- p +
geom_point(data=sel, aes(x=lon, y=lat, color=!!sym(colour)), size=size, alpha=.8)
if(rainbow)
p <- p + scale_color_gradientn(colors = rainbow(7)) + labs(shape="feeding") else
p <- p + scale_color_gradient(low=mincol, high=maxcol) + labs(shape="feeding")
print(p)
}
return(sel)
}
shells
load_all()
rm(list = c("map.shells")
)
load_all()
N_UK <- map.shells(53, -11, 60, 2, scale="medium")
load_all()
N_UK <- map.shells(53, -11, 60, 2, scale="medium")
load_all()
N_UK <- map.shells(53, -11, 60, 2, scale="medium")
load_all()
N_UK <- map.shells(53, -11, 60, 2, scale="medium")
load_all()
N_UK <- map.shells(53, -11, 60, 2, scale="medium")
check()
rhub::rhub_check()
document()
document()
rhub::rhub_check()
rhub::rhub_check()
rhub::rhub_setup()
rhub::rhub_setup(overwrite=T)
rhub::rhub_check()
"rnaturalearthhires" %in% installed.packages()
check()
check()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
scale
size
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
rnaturalearth::ne_countries
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
dev.off()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
myshells <- map.shells(S=54, W=-8, N=61, E=0, "large") # the northern part of the UK
myshells <- map.shells(S=54, W=-8, N=61, E=0, mapsize="large") # the northern part of the UK
myshells <- map.shells(S=54, W=-8, N=61, E=0, "large") # the northern part of the UK
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
load_all()
myshells <- map.shells(S=54, W=-8, N=61, E=0) # the northern part of the UK
check()
check()
check()
check()
document()
document()
check()
rhub::rhub_check()
rhub::rhub_check()
build()
build_vignettes()
install()
rhub::rhub_check()
check()
check()
install()
q()
gc()
ls()
rm(list=ls())
require(devtools)
update.packages()
check()
q()
require(devtools)
check()
check()
build()
q()
setwd("~/Dropbox/devsoftware/rice")
library(devtools)
load_all()
install()
library(rice)
devtools::check()
debug(calBPtoC14)
debug(calBPtoC141)
debug(BCADtoC14)
browser()
calBPtoC14
calBPtoC14()
