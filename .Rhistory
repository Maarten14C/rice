source("~/Dropbox/hallstatt.R")
source("~/Dropbox/hallstatt.R")
source("~/Dropbox/hallstatt.R")
source("~/Dropbox/hallstatt.R")
source("~/Dropbox/hallstatt.R")
source("~/Dropbox/hallstatt.R")
dev.copy2pdf("~/Dropbox/Hallstat.pdf")
dev.copy2pdf(file="~/Dropbox/Hallstat.pdf")
dev.copy2pdf(file="~/Dropbox/Hallstatt.pdf")
?pdf
source("~/Dropbox/hallstatt.R")
dev.off()
dev.off()
?pdf
source("~/Dropbox/hallstatt.R")
source("~/Dropbox/hallstatt.R")
source("~/Dropbox/hallstatt.R")
source("~/Dropbox/hallstatt.R")
source("~/Dropbox/hallstatt.R")
update.packages()
devtools::check()
rhub::rhub_check()
document()
build()
rhub::rhub_check()
document()
build_vignettes()
build()
rhub::rhub_check()
build()
rhub::rhub_check()
rhub::rhub_check()
rhub::rhub_check()
release()
spell_check()
document()
document()
build()
build_vignettes()
build()
spell_check()
release()
rhub::rhub_check()
check_win_devel()
release()
build_vignettes()
build()
release()
install(ri)
q()
require(devtools)
install(ri)
check()
calBPtoF14C <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL) {
  cc <- rintcal::ccurve(cc, postbomb, cc.dir)
  mu <- approx(cc[,1], cc[,2], yr, rule=rule)$y
  er <- approx(cc[,1], cc[,3], yr, rule=rule)$y
  return(C14toF14C(mu, er))
}
calBPtoF14C(100)
calBPtoF14C(1000)
calBPtoF14C(10000)
calBPtoF14C(100000)
calBPtopMC <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL) {
  cc <- rintcal::ccurve(cc, postbomb, cc.dir)
  mu <- approx(cc[,1], cc[,2], yr, rule=rule)$y
  er <- approx(cc[,1], cc[,3], yr, rule=rule)$y
  return(C14topMC(mu, er))
}
calBPtopMC(1)
calBPtopMC(10)
calBPtopMC(100)
calBPtopMC(1000)
calBPtopMC(10000)
calBPtopMC(100000)
calBPtopMC(1000)
calBPtopMC(100)
calBPtopMC(10)
calBPtopMC(1)
plot(1:50e3, calBPtopMC(1:50e3))
plot(1:50e3, calBPtopMC(1:50e3)[,1])
C14toD14C
D14CtoC14
D14CtoF14C
C14toD14C
C14toF14C
C14toD14C(90)
C14toD14C(90, 100)
C14toF14C(900)
C14toF14C(900,10)
calBPtoC14
calBPtoF14C
calBPtoC14
calBPtoF14C <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL) {
  y <- cbind(calBPtoC14(yr, cc, postbomb, rule, cc.dir))
  return(C14toF14C(y[,1], y[,2]))
}
calBPtoF14C(90)
calBPtoF14C(90:100)
D14CtoC14
F14CtoD14C
calBPtoD14C <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL) {
  F <- calBPtoF14C(yr, cc, postbomb, rule, cc.dir)
  Fup <- F[,1]+F[,2]
  D <- F14CtoD14C(F, yr)
  Dup <- F14CtoD14C(Fup, yr)
  return(Dup-D)
}
calBPtoD14C(900)
calBPtoD14C(900:100)
calBPtoD14C(900:1000)
calBPtoD14C <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL) {
  F <- calBPtoF14C(yr, cc, postbomb, rule, cc.dir)
  Fup <- F[,1]+F[,2]
  D <- F14CtoD14C(F, yr)
  Dup <- F14CtoD14C(Fup, yr)
  D <<- D; Dup <<- Dup
  return(Dup-D)
}
calBPtoD14C(900)
D
calBPtoD14C <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL) {
  F <- calBPtoF14C(yr, cc, postbomb, rule, cc.dir)
  Fup <- F[,1]+F[,2]
  Dmn <- F14CtoD14C(F, yr)
  Dup <- F14CtoD14C(Fup, yr)
  Dmn <<- Dmn; Dup <<- Dup
  return(Dup-Dmn)
}
calBPtoD14C(900)
Dmn
F14CtoD14C
F14CtoD14C
F14CtoD14C(900)
F14CtoD14C(.1, 900)
calBPtoF14C(900)
calBPtoF14C(900:910)
calBPtoD14C <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL) {
  F <- calBPtoF14C(yr, cc, postbomb, rule, cc.dir)
  Fup <- F[,1]+F[,2]
  Dmn <- F14CtoD14C(F, yr)
  Dup <- F14CtoD14C(Fup, yr)
  Dmn <<- Dmn; Dup <<- Dup
  return(Dup-Dmn)
}
calBPtoD14C(900)
Dmn
F14CtoD14C(1, 900)
calBPtoF14C(100)
calBPtoD14C <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL) {
  F <- cbind(calBPtoF14C(yr, cc, postbomb, rule, cc.dir))
  Fup <- F[,1]+F[,2]
  Dmn <- F14CtoD14C(F[,1], yr)
  Dup <- F14CtoD14C(Fup, yr)
  Dmn <<- Dmn; Dup <<- Dup
  return(Dup-Dmn)
}
calBPtoD14C(900)
calBPtoD14C <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL) {
  F <- cbind(calBPtoF14C(yr, cc, postbomb, rule, cc.dir))
  Fup <- F[,1]+F[,2]
  Dmn <- F14CtoD14C(F[,1], yr)
  Dup <- F14CtoD14C(Fup, yr)
  return(Dmn, Dup-Dmn)
}
calBPtoD14C(900)
calBPtoD14C <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL) {
  F <- cbind(calBPtoF14C(yr, cc, postbomb, rule, cc.dir))
  Fup <- F[,1]+F[,2]
  Dmn <- F14CtoD14C(F[,1], yr)
  Dup <- F14CtoD14C(Fup, yr)
  return(cbind(Dmn, Dup-Dmn))
}
calBPtoD14C(900)
calBPtoD14C(900:910)
plot(0:300, calBPtoD14C(0:300)
)
plot(0:300, calBPtoD14C(0:300)[,1])
calBPtoD14C <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL) {
  F <- cbind(calBPtoF14C(yr, cc, postbomb, rule, cc.dir))
  Dmn <- F14CtoD14C(F[,1], yr)
  Dup <- F14CtoD14C(F[,1]+F[,2], yr)
  return(cbind(Dmn, Dup-Dmn))
}
plot(0:300, calBPtoD14C(0:300)[,1])
plot(0:300, calBPtoD14C(0:300)[,1], type='l')
plot(0:3000, calBPtoD14C(0:3000)[,1], type='l')
calBPtoD14C
F14CtoD14C
F14CtoD14C(1,100)
F14CtoD14C(1,100:110)
F14CtoD14C(1,100)
F14CtoD14C(1:10,100)
F14CtoD14C(0:10)/10,100)
F14CtoD14C((0:10)/10,100)
calBPtoF14C(90)
calBPtoF14C
BCADtoF14C <- function(yr, cc=1, postbomb=FALSE, zero=TRUE, rule=1, cc.dir=NULL) 
  return(calBPtoF14C(BCADtocalBP(yr, zero=zero), cc=1, postbomb=FALSE, rule=1, cc.dir=NULL))
BCADtoF14C(1940)
BCADtoF14C(1940,2)
BCADtoF14C(1940,3)
BCADtoF14C <- function(yr, cc=1, postbomb=FALSE, zero=TRUE, rule=1, cc.dir=NULL) 
  return(calBPtoF14C(BCADtocalBP(yr, zero=zero), cc=cc, postbomb=postbomb, rule=rule, cc.dir=cc.dir))
BCADtoF14C(1940,3)
BCADtoF14C(1940,1)
BCADtoF14C(1940,2)
BCADtoF14C(1940,3)
BCADtoF14C(1940,1:3)
BCADtoF14C(1940,1)
BCADtoF14C(1940,2)
BCADtoF14C(1940,3)
calBPtoC14 <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL, thiscurve=NULL) {
  cc <- ifelse(length(thiscurve) > 0,
    thiscurve, rintcal::ccurve(cc, postbomb, cc.dir))
  mu <- approx(cc[,1], cc[,2], yr, rule=rule)$y
  er <- approx(cc[,1], cc[,3], yr, rule=rule)$y
  return(cbind(mu, er))
}
calBPtoC14(900)
length(NULL)
calBPtoC14 <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL, thiscurve=NULL) {
  if(length(thiscurve) > 0)
    cc <- thiscurve else 
      cc <- rintcal::ccurve(cc, postbomb, cc.dir)
  mu <- approx(cc[,1], cc[,2], yr, rule=rule)$y
  er <- approx(cc[,1], cc[,3], yr, rule=rule)$y
  return(cbind(mu, er))
}
calBPtoC14(900)
calBPtoF14C <- function(yr, cc=1, postbomb=FALSE, rule=1, cc.dir=NULL) {
  y <- calBPtoC14(yr, cc, postbomb, rule, cc.dir)
  return(C14toF14C(y[,1], y[,2]))
}
calBPtoF14C(900)
calBPtoF14C(900:910)
calBPtoF14C
load_all()
rm(list = c("BCADtoF14C", "calBPtoC14"))
load_all()
calBPtoD14C(900)
load_all()
calBPtoD14C(900)
?return
calBPtoD14C(900:910)
load_all()
BCADtocalBP(90)
BCADtocalBP(1890)
?return
load_all()
BCADtopMC(100)
calBPtopMC
load_all()
calBPtopMC
document()
calBPtopMC
load_all()
rm(list = c("calBPtoD14C", "calBPtoF14C", "calBPtopMC"))
document()
load_all()
calBPtopMC
BCADtopMC(100)
BCADtopMC
calBPtopMC
calBPtoC14
q()
q()
require(devtools)
ri
require(rice)
install()
q()
install()
require(devtools)
require(rice)
install()
release()
version
check_win_devel()
check_win_devel()
release()
tools::check_packages_in_dir()
tools::check_packages_in_dir("../")
remove.packages("colorspace")
install.packages("colorspace")
install.packages("colorspace", type = "source")
unlink(tempdir(), recursive = TRUE)
rm(list = ls())
tools::check_packages_in_dir("../")
ri
ri <- "~/Dropbox/devsoftware/rice"
check(ri)
getwd()
clean_dll()
check()
q()
require(devtools)
require(rice)
install()
tools::check_packages_in_dir("../")
setwd("~/Desktop/packages/")
tools::check_packages_in_dir(".")
release()
getwd()
setwd("~/Dropbox/devsoftware/rice")
release()
release()
install(ri)
install.packages('terra')
install(ri)
BCADtoF14C(1400)[1]
BCADtoC14(1400)[1]
BCADtoC14(1400)
BCADtoC14(40)
BCADtoC14(2000)
BCADtoC14(1950)
BCADtoF14C(1400)[1]
BCADtoF14C(40)[1]
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
dev.new()
decontaminate(591, BCADtoC14(40)[1], 1)
dev.new()
draw.ccurve(0, 1950, BCAD=T, realm="F")
abline(h=1)
BCADtoF14C(1400)[1]
abline(h=BCADtoF14C(1400)[1])
load_all(ri)
load_all(ri)
load_all(ri)
load_all(ri)
load_all(ri)
BCADtoF14C(1400)[1]
decontaminate(591, BCADtoC14(40)[1], 1)
load_all(ri)
load_all(ri)
decontaminate(591, BCADtoC14(40)[1], 1)
(1-.67)*.78 + .67
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
(1-.98)*.78 + .02*.93
(1-.98)*.78 + .98*.93
load_all(ri)
load_all(ri)
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
load_all(ri)
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
load_all(ri)
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
( (1-98.22)*0.78 + 98.22*0.93)
load_all(ri)
( (1-98.22)*0.78 + 98.22*0.93)
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
( (1-98.22)*0.78 + 98.22*0.93)
load_all(ri)
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
load_all(ri)
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
load_all(ri)
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
load_all(ri)
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
load_all(ri)
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
load_all(ri)
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
load_all(ri)
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
load_all(ri)
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
load_all(ri)
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
decontaminate
install()
decontaminate(591, BCADtoC14(40)[1], BCADtoF14C(1400)[1])
q()
require(devtools)
ri
require(rice)
document()
document()
load_all(
)
contaminate(5000, 20, 1, 1)
contaminate(25000, 20, 1, 1)
load_all()
contaminate(25000, 20, 1, 1)
load_all()
contaminate(25000, 20, 1, 1)
check()
check()
contaminate(66e6, 1e6, .5, 1, F14C.er=0.01)

contaminate
contaminate(66e6, 1e6, 0.5, 1)

contaminate(66e6, 1e6, 0.5, 0.1)

decontaminate(9000, percentage=1)

decontaminate(9000, 100, percentage=1)

decontaminate
clean
load_all()
load_all()
load_all()
document()
document()
load_all()
load_all()
build_vignettes()
load_all()
build_vignettes()
real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, .1, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")

for(i in 1:length(contam))
  lines(real.14C, contaminate(real.14C, c(), contam[i], 1, decimals=5), col=contam.col[i])

y <- real.14C
y
  true.F <- as.data.frame(C14toF14C(y, sdev, decimals))

sdev <- 0
  true.F <- as.data.frame(C14toF14C(y, sdev, decimals))

decimals <- 5
  true.F <- as.data.frame(C14toF14C(y, sdev, decimals))

true.F
dim(true.F)
  obs.F <- ((1-fraction)*true.F[,1]) + (fraction*F.contam)

fraction <- .4
  obs.F <- ((1-fraction)*true.F[,1]) + (fraction*F.contam)

F.contam <- 1
  obs.F <- ((1-fraction)*true.F[,1]) + (fraction*F.contam)

obs.F
build_vignettes()
real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, .1, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")

for(i in 1:length(contam))
  lines(real.14C, contaminate(real.14C, c(), contam[i], 1, decimals=5), col=contam.col[i])

draw.contamination()
F14CtoC14
draw.contamination()
load_all()
contaminate(2000, 0, 1, 1)
tmp <- nate(2000, 0, 1, 1)
tmp <- contaminate(2000, 0, 1, 1)
tmp
real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, .1, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")

for(i in 1:length(contam))
  lines(real.14C, contaminate(real.14C, c(), contam[i], 1, decimals=5, visualise=FALSE), col=contam.col[i])

load_all()
for(i in 1:length(contam))
  lines(real.14C, contaminate(real.14C, c(), contam[i], 1, decimals=5, visualise=FALSE), col=contam.col[i])

real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, .1, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")

load_all()
real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, .1, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")

for(i in 1:length(contam))
  lines(real.14C, contaminate(real.14C, c(), contam[i], 1, decimals=5, visualise=FALSE), col=contam.col[i])

for(i in 1:length(contam))
  lines(real.14C, contaminate(real.14C, c(), contam[i], 1, decimals=5, talk=FALSE), col=contam.col[i])

load_all()
contaminate
load_all()
for(i in 1:length(contam))
  lines(real.14C, contaminate(real.14C, c(), contam[i], 1, decimals=5, talk=FALSE), col=contam.col[i])

load_all()
for(i in 1:length(contam))
  lines(real.14C, contaminate(real.14C, c(), contam[i], 1, decimals=5, talk=FALSE), col=contam.col[i])

load_all()
for(i in 1:length(contam))
  lines(real.14C, contaminate(real.14C, c(), contam[i], 1, decimals=5, talk=FALSE), col=contam.col[i])

for(i in 1:length(contam))
  lines(real.14C, contaminate(real.14C, 0, contam[i], 1, decimals=5, talk=FALSE), col=contam.col[i])

contaminate(5000, 20, 1, 1)
contaminate(5000:5010, 20, 1, 1)
load_all()
contaminate(5000:5010, 20, 1, 1)
tmp <- contaminate(5000:5010, 20, 1, 1)
tmp
load_all()
load_all()
load_all()
document()
document()
real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, .1, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")
for(i in 1:length(contam))
  lines(real.14C, contaminate(real.14C, 0, contam[i], 1, decimals=5, talk=FALSE), col=contam.col[i])

plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")
for(i in 1:length(contam))
  lines(real.14C, contaminate(real.14C, 0, contam[i], 1, decimals=5, talk=FALSE), col=contam.col[i])

real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, .1, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")
for (i in 1:length(contam)) {
  observed <- contaminate(real.14C, 0, contam[i], 1, decimals=5, talk=FALSE)
  lines(real.14C, observed[,1], col = contam.col[i])
}

dev.off()
real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, .1, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")
for (i in 1:length(contam)) {
  observed <- contaminate(real.14C, 0, contam[i], 1, decimals=5, talk=FALSE)
  lines(real.14C, observed[,1], col = contam.col[i])
}

real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, 10, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")
for (i in 1:length(contam)) {
  observed <- contaminate(real.14C, 0, contam[i], 1, decimals=5, talk=FALSE)
  lines(real.14C, observed[,1], col = contam.col[i])
}

real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, 10, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")
for (i in 1:length(contam)) {
  observed <- contaminate(real.14C, 0, contam[i], 1, decimals=5, talk=FALSE)
  lines(real.14C, observed[,1], col = contam.col[i])
}
contam.legend <- seq(0, .1, length=6)
contam.col <- rainbow(length(contam.legend)-1)
text(50e3, contaminate(50e3, c(), contam.legend, 1), 
  labels=contam.legend, col=contam.col, cex=.7, offset=0, adj=c(0,.8))

contam.legend <- seq(0, .1, length=6)
contam.col <- rainbow(length(contam.legend)-1)
text(50e3, contaminate(50e3, 0, contam.legend, 1)[,1],
  labels=contam.legend, col=contam.col, cex=.7, offset=0, adj=c(0,.8))

real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, 10, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")
for (i in 1:length(contam)) {
  observed <- contaminate(real.14C, 0, contam[i], 1, decimals=5, talk=FALSE)
  lines(real.14C, observed[,1], col = contam.col[i])
}
contam.legend <- seq(0, .1, length=6)
contam.col <- rainbow(length(contam.legend)-1)
text(50e3, contaminate(50e3, 0, contam.legend, 1)[,1],
  labels=contam.legend, col=contam.col, cex=.7, offset=0, adj=c(0,.8))
real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, 10, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")
for (i in 1:length(contam)) {
  observed <- contaminate(real.14C, 0, contam[i], 1, decimals=5, talk=FALSE)
  lines(real.14C, observed[,1], col = contam.col[i])
}

contam.legend <- seq(0, .1, length=6)
contam.col <- rainbow(length(contam.legend)-1)
text(50e3, contaminate(50e3, 0, contam.legend, 1, visualise=FALSE, talk=FALSE)[,1],
  labels=contam.legend, col=contam.col, cex=.7, offset=0, adj=c(0,.8))
real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, 10, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")
for (i in 1:length(contam)) {
  observed <- contaminate(real.14C, 0, contam[i], 1, decimals=5, talk=FALSE)
  lines(real.14C, observed[,1], col = contam.col[i])
}
contam.legend <- seq(0, 10, length=6)
contam.col <- rainbow(length(contam.legend)-1)
text(50e3, contaminate(50e3, 0, contam.legend, 1, visualise=FALSE, talk=FALSE)[,1],
  labels=contam.legend, col=contam.col, cex=.7, offset=0, adj=c(0,.8))
real.14C <- seq(0, 50e3, length=200)
contam <- seq(0, 10, length=101) # 0 to 10% contamination
contam.col <- rainbow(length(contam))
plot(0, type="n", xlim=c(0, 55e3), xlab="real 14C age", ylim=range(real.14C), ylab="observed 14C age")
for (i in 1:length(contam)) {
  observed <- contaminate(real.14C, 0, contam[i], 1, decimals=5, talk=FALSE)
  lines(real.14C, observed[,1], col = contam.col[i])
}
contam.legend <- seq(0, 10, length=6)
contam.col <- rainbow(length(contam.legend)-1)
text(50e3, contaminate(50e3, 0, contam.legend, 1, visualise=FALSE, talk=FALSE)[,1],
  labels=contam.legend, cex=.7, offset=0, adj=c(0,.8))
build_vignettes()
muck(591, BCADtoC14(40)[1], 1)

build_vignettes()
load_all()
document()
document()
load_all()
build_vignettes()
draw.contamination()

load_all()
draw.contamination()

load_all()
draw.contamination()

load_all()
draw.contamination()

load_all()
draw.contamination()

install()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
380*1.2
200*456
250*456
20*1.2
100* 456 + 100*300 
125*456 + 125+300
125*456 + 125*300
19.65*1.054
getwd()
install()
q()
