lines(zseq, probs[,2], col=2)
lines(xseq, probs[,2], col=2)
plot(xseq, probs1[,1], type='l')
lines(xseq, probs1[,2], col=2)
plot(xseq, probs2[,1], type='l')
lines(xseq, probs2[,2], col=2)
probs2
sum(probs2[,1])
sum(probs2[,2])
colSums(probs1)
sum(probs1[,2])
sum(probs1[,1])
plot(xseq, probs1[,1], type='l')
lines(xseq, probs1[,2], col=2)
tmp <- probs1
tmp <- probs1/colSums(probs1)
plot(xseq, probs1[,1])
plot(xseq, probs1[,1], type='l')
plot(xseq, tmp[,1])
plot(xseq, tmp[,1], type='l')
probs1[,1]
plot(xseq, probs1[,1], type='l')
plot(xseq, tmp[,1], type='l')
load_all(ri)
overlapping(c(9000, 9000), c(20,100), res=1000)
overlapping(c(9000, 9000), c(20,20), res=1000)
load_all(ri)
overlapping(c(9000, 9000), c(20,20), res=1000)
overlapping(c(9000, 9000), c(20,200), res=1000)
probs2
plot(xseq, probs1[,1], type='l')
plot(xseq, probs2[,1], type='l')
sum(probs2[,1])
sum(probs2[,2])
overlapping(c(9000, 9000), c(20,200), res=1000, threshold=0)
overlapping(c(9000, 9000), c(20,200), res=1000, threshold=0)
overlapping(c(9000, 9000), c(20,20), res=1000, threshold=0)
overlapping(c(9000, 9000), c(20,20), res=1000, threshold=0.0001)
overlapping(c(9000, 9000), c(20,20), res=1000, threshold=1e-6)
overlapping(c(9000, 9050), c(20,20), res=1000, threshold=1e-6)
y
y <- c(53000, 69000); er <- c(3000, 3000)
overlapping(y, er)
overlapping(y, er, cc=0)
load_all(ri)
overlapping(y, er, cc=0)
plot(asdist)
sum(asdist)
sum(asdist[,2])
  min_values <- apply(probs, 1, min, na.rm=TRUE)
  min_values <- apply(probs3, 1, min, na.rm=TRUE)
min_values
sum(min_values)
overlapping(y, er, cc=0)
probs2
sum(probs2[,1])
sum(probs2[,2])
  min_values <- apply(probs3, 1, min, na.rm=TRUE)
min_values
sum(min_values)
load_all(ri)
overlapping(y, er, cc=0)
y; er
overlapping(y, er, cc=0)
y <- c(53000, 89000); er <- c(3000, 3000)
overlapping(y, er, cc=0)
y; er
overlapping(y, er, cc=0)
load_all(ri)
load_all(ri)
overlapping(y, er, cc=0)
y; er
overlapping(y, er, cc=0)
load_all(ri)
overlapping(y, er, cc=0)
load_all(ri)
plot(0:300, l.calib(0:300, 130, 20, cc=0), type='l')
plot(0:300, l.calib(0:300, 130, 20, cc=1), type='l')
load_all(ri)
plot(0:300, l.calib(0:300, 130, 20, cc=1), type='l')
plot(0:300, l.calib(0:300, 130, 20, cc=0), type='l')
y
overlapping(y, er, )
overlapping(y, er, cc=0)
load_all(ri)
overlapping(y, er, cc=0)
load_all(ri)
overlapping(y, er, cc=0)
load_all(ri)
overlapping(y, er, cc=0)
plot(xseq, probs1, type='l')
plot(xseq, probs1[,1], type='l')
plot(xseq, probs1[,2], type='l')
plot(xseq, probs1[,1], type='l')
lines(xseq, probs1[,2], col=2)
sum(probs1[,1])
sum(probs1[,2])
sum(probs2[,2])
sum(probs2[,1])
plot(xseq, probs2[,1], type='l')
lines(xseq, probs2[,2], col=2)
plot(xseq, probs3[,1], type='l')
lines(xseq, probs3[,2], col=2)
load_all(ri)
overlapping(y, er, cc=0)
asdist
dist.overlap(cbind(xseq, probs3[,1]), cbind(xseq, probs3[,2]))
asdist
max(asdist[,2])
dist.overlap(cbind(xseq, probs3[,1]), cbind(xseq, probs3[,2]))
load_all(ri)
dist.overlap(cbind(xseq, probs3[,1]), cbind(xseq, probs3[,2]))
load_all(ri)
dist.overlap(cbind(xseq, probs3[,1]), cbind(xseq, probs3[,2]))
load_all(ri)
dist.overlap(cbind(xseq, probs3[,1]), cbind(xseq, probs3[,2]))
y
y <- c(53000, 54000)
overlapping(y, er, cc=0)
dist.overlap(cbind(xseq, probs3[,1]), cbind(xseq, probs3[,2]))
y <- c(53000, 64000)
overlapping(y, er, cc=0)
dist.overlap(cbind(xseq, probs3[,1]), cbind(xseq, probs3[,2]))
y <- c(53000, 74000)
overlapping(y, er, cc=0)
dist.overlap(cbind(xseq, probs3[,1]), cbind(xseq, probs3[,2]))
load_all(ri)
dist.overlap(cbind(xseq, probs3[,1]), cbind(xseq, probs3[,2]))
load_all(ri)
dist.overlap(cbind(xseq, probs3[,1]), cbind(xseq, probs3[,2]))
overlapping(y, er, cc=1)
dist.overlap(cbind(xseq, probs3[,1]), cbind(xseq, probs3[,2]))
load_all(ri)
dist.overlap(cbind(xseq, probs3[,1]), cbind(xseq, probs3[,2]))
asdist
plot(asdist, type='l')
sum(asdist[,2])
load_all(ri)
overlapping(y, er, cc=1)
y2 <- c(55000, 54000)
overlapping(y2, er, cc=1)
y3 <- c(45000, 44000)
overlapping(y3, er, cc=1)
y3 <- c(45000, 64000)
overlapping(y3, er, cc=1)
overlapping(y3, er, cc=0)
load_all(ri)
overlapping(y3, er, cc=0)
y4 <- c(5000, 64000)
overlapping(y4, er, cc=0)
asdist
asdist[,2]
load_all(ri)
overlapping(y4, er, cc=0)
y4
y3
overlapping(y3, er, cc=0)
data.frame
pmin
?pmin
dists 
dists <- list(caldist(1300,20), caldist(1500,20))
dists
load_all(ri)
newdist.overlap(dists)
xseq
probs
pmin(probs)
load_all(ri)
newdist.overlap(dists)
load_all(ri)
newdist.overlap(dists)
load_all(ri)
newdist.overlap(dists)
load_all(ri)
newdist.overlap(dists)
dists <- list(caldist(1300,20), caldist(1500,20), caldist(100,20))
newdist.overlap(dists)
draw.dist
load_all(ri)
newdist.overlap(dists)
load_all(ri)
newdist.overlap(dists)
load_all(ri)
newdist.overlap(dists)
load_all(ri)
newdist.overlap(dists)
dists2 <- list(caldist(65e3, 2e3, cc=0), caldist(45e3, 2e3, cc=0))
newdist.overlap(dists2)
load_all(ri)
newdist.overlap(dists2)
overlap
load_all(ri)
newdist.overlap(dists2)
dists2 <- list(caldist(65e3, 2e3, cc=0), caldist(55e3, 2e3, cc=0))
newdist.overlap(dists2)
load_all(ri)
newdist.overlap(dists2)
load_all(ri)
newdist.overlap(dists2)
load_all(ri)
newdist.overlap(dists2)
dists2 <- list(caldist(65e3, 2e3, cc=1), caldist(55e3, 2e3, cc=1))
newdist.overlap(dists2)
load_all(ri)
overlapping(c(4000, 4100), c(20, 30))
overlapping(c(4000, 4100), c(20, 30))
load_all(ri)
overlapping(c(4000, 4100), c(20, 30))
load_all(ri)
overlapping(c(4000, 4100), c(20, 30))
overlapping(c(4000, 4010), c(20, 30))
overlapping(c(4000, 4010), c(20, 20))
overlapping(c(4000, 4000), c(20, 20))
overlapping(c(4000, 4010), c(20, 20))
overlapping(c(4000, 14000), c(20, 20))
load_all(ri)
overlapping(c(4000, 14000), c(20, 20))
load_all(ri)
overlapping(c(4000, 14000), c(20, 20))
load_all(ri)
overlapping(c(4000, 14000), c(20, 20))
overlap
load_all(ri)
overlapping(c(4000, 14000), c(20, 20))
overlap
overlapping(c(4000, 14000), c(20, 20))
?approx
load_all(ri)
overlapping(c(4000, 14000), c(20, 20))
overlap
?approx
load_all(ri)
overlapping(c(4000, 14000), c(20, 20))
overlapping(c(4000, 24000), c(20, 20))
overlapping(c(4000, 2000), c(20, 20))
load_all(ri)
overlapping(c(4000, 2000), c(20, 20))
overlapping(c(4000, 3000), c(20, 20))
overlapping(c(4000, 3500), c(20, 20))
overlapping(c(4000, 3800), c(20, 20))
overlapping(c(4000, 3900), c(20, 20))
overlapping(c(4000, 3920), c(20, 20))
overlapping(c(4000, 3950), c(20, 20))
overlapping(c(4000, 3910), c(20, 20))
overlap
load_all(ri)
overlapping(c(4000, 3910), c(20, 20))
overlap
overlapping(c(4000, 3990), c(20, 20))
load_all(ri)
overlapping(c(4000, 3990), c(20, 20))
probs
load_all(ri)
overlapping(c(4000, 3990), c(20, 20))
thisprob
load_all(ri)
overlapping(c(4000, 3990), c(20, 20))
sum
load_all(ri)
overlapping(c(4000, 3990), c(20, 20))
thisprob
?apply
load_all(ri)
overlapping(c(4000, 3990), c(20, 20))
overlapping(c(4000, 3090), c(20, 20))
overlapping(c(4000, 3890), c(20, 20))
load_all(ri)
overlapping(c(4000, 3890), c(20, 20))
overlap
sum(overlap)
load_all(ri)
overlapping(c(4000, 3890), c(20, 20))
overlapping(c(4000, 3090), c(20, 20))
overlapping(c(4000, 3890), c(20, 20))
overlapping(c(4000, 3990), c(20, 20))
overlapping(c(55000, 65000), c(2e3, 2e3))
overlapping(c(55000, 65000), c(2e3, 2e3), cc=0)
overlapping(c(55000, 65000, 55500), c(2e3, 2e3, 1e3), cc=0)
load_all(ri)
overlapping(c(55000, 65000, 55500), c(2e3, 2e3, 1e3), cc=0)
overlapping(c(55000, 65000, 5550), c(2e3, 2e3, 1e3), cc=0)
overlapping(c(55000, 65000), c(2e3, 2e3), cc=0)
load_all(ri)
overlapping(c(55000, 65000), c(2e3, 2e3), cc=0)
overlapping(c(55000, 65000), c(2e3), cc=0)
caldist
load_all(ri)
overlapping(c(55000, 65000), c(2e3), cc=0)
overlapping(c(55000, 65000), c(2e3, 150), cc=0)
overlapping(c(55000, 65000), c(2e3, 150), cc=0, BCAD=T)
overlapping(c(55000, 65000), c(2e3, 1500), cc=0, BCAD=T)
overlapping(c(55000, 65000), c(2e3, 1500), cc=0)
overlapping(c(55000, 65000), c(2e3, 1500), cc=0, BCAD=T)
load_all(ri)
overlapping(c(55000, 65000), c(2e3, 1500), cc=0, BCAD=T)
overlapping(c(55000, 65000), c(2e3, 1500), cc=0, BCAD=T, threshold=0)
overlapping(c(55000, 65000), c(2e3, 1500), cc=0, BCAD=F, threshold=0)
is.list
is.list(9)
is.list(list(9))
load_all(ri)
overlapping(c(55000, 65000), c(2e3, 1500), cc=0, BCAD=F, threshold=0)
load_all(ri)
overlapping(c(55000, 65000), c(2e3, 1500), cc=0, BCAD=F, threshold=0)
load_all(ri)
overlapping(c(55000, 65000), c(2e3, 1500), cc=0, BCAD=F, threshold=0)
load_all(ri)
overlapping(c(55000, 65000), c(2e3, 1500), cc=0, BCAD=F, threshold=0)
load_all(ri)
overlapping(c(55000, 65000), c(2e3, 1500), cc=0, BCAD=F, threshold=0)
overlapping(c(800, 900), c(20,25))
overlapping(c(800, 900), c(20,25))
caldist
load_all(ri)
load_all(ri)
overlapping(c(.9, .8), c(.01, .01), is.F=T)
overlapping(c(.9, .88), c(.01, .01), is.F=T)
overlapping(c(.9, .88, .85), c(.01, .01, .015), is.F=T)
caldist
overlapping
load_all(ri)
calibrate(2450, 50)
calibrate(55050, 50)
calibrate(55050, 50, edge=F)
load_all(ri)
calibrate(55050, 50, edge=F)
calibrate(5505, 50, edge=F)
calibrate(55050, 50, edge=F)
calibrate(.01, .0001, is.F=T, edge=F)
calibrate(.001, .0001, is.F=T, edge=F)
calibrate(.0001, .0001, is.F=T, edge=F)
load_all(ri)
calibrate(.0001, .0001, is.F=T, edge=F)
calibrate(65000, 2000, )
calibrate(65000, 2000, edge=F)
ccurve
load_all(ri)
calibrate(65000, 2000, edge=F)
load_all(ri)
calibrate(65000, 2000, edge=F)
load_all(ri)
calibrate(65000, 2000, edge=F)
calibrate(55000, 2000, edge=F)
calibrate(54000, 2000, edge=F)
calibrate(51000, 2000, edge=F)
calibrate(49000, 2000, edge=F)
  maxcc <- rintcal::ccurve(cc, postbomb=postbomb, cc.dir, as.F=is.F)
  maxcc <- rintcal::ccurve(cc, postbomb=F, as.F=T)
  maxcc <- rintcal::ccurve(cc=1, postbomb=F, as.F=T)
  maxcc <- maxcc[which(maxcc[,2] == max(maxcc[,2])),2:3]
maxcc
load_all(ri)
  maxcc <- rintcal::ccurve(cc=1, postbomb=F, as.F=T)
  maxcc <- maxcc[which(maxcc[,2] == max(maxcc[,2]))[1],2:3]
maxcc
load_all(ri)
  maxcc <- rintcal::ccurve(cc=1, postbomb=F, as.F=T)
  maxcc <- maxcc[which(maxcc[,2] == max(maxcc[,2]))[1],2:3]
maxcc
maxcc
  maxcc <- rintcal::ccurve(cc, postbomb=postbomb, cc.dir, as.F=is.F)
  maxcc <- rintcal::ccurve(cc=1, postbomb=1, as.F=T)
maxcc
  maxcc <- rintcal::ccurve(cc=1, postbomb=F, as.F=T)
maxcc
  maxcc <- maxcc[which(maxcc[,2] == min(maxcc[,2]))[1],2:3]
maxcc
load_all(ri)
calibrate(49000, 2000, edge=F)
calibrate(51000, 2000, edge=F)
load_all(ri)
calibrate(51000, 2000, edge=F)
ov
load_all(ri)
calibrate(51000, 2000, edge=F)
maxcc
asF
load_all(ri)
calibrate(51000, 2000, edge=F)
load_all(ri)
calibrate(51000, 2000, edge=F)
maxcc
load_all(ri)
calibrate(51000, 2000, edge=F)
load_all(ri)
calibrate(51000, 2000, edge=F)
asF
load_all(ri)
calibrate(51000, 2000, edge=F)
load_all(ri)
calibrate(51000, 2000, edge=F)
calibrate(51000, 2000, edge=T)
calibrate(51000, 2000, edge=F)
calibrate(61000, 2000, edge=F)
calibrate(56000, 2000, edge=F)
calibrate(61000, 2000, edge=F)
load_all(ri)
calibrate(61000, 2000, edge=F)
asF
maxcc
overlapping(c(asF[1], maxcc[1]), c(asF[2], maxcc[2]))
overlapping(c(asF[1], maxcc[1]), c(asF[2], maxcc[2]), cc=0)
overlapping(c(asF[1], maxcc[1]), c(asF[2], maxcc[2]), cc=0, is.F=T)
overlapping(c(asF[1], maxcc[1]), c(asF[2], maxcc[2]), cc=0)
asF
maxcc
overlapping(c(.002, .0019), c(.0002, .0002))
overlapping(c(.002, .0019), c(.0002, .0002), c=0)
overlapping(c(.002, .0019), c(.0002, .0002), cc=0)
overlapping(c(.002, .0019), c(.0002, .0002), cc=0, is.F=T)
y <- c(3820, 4430
y <- c(3820, 4430)
er <- c(40, 40)
overlapping(y, er, cc=1:2) 
overlapping(y, er, cc=1) 
rm(list=ls())
ri <- "~/Dropbox/devsoftware/rice"
load_all(ri)
overlapping(y, er, cc=1) 
overlapping(c(.9, .8), c(.01, .01), is.F=T)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=c(0,0))
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=1)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=2)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0)
load_all(ri)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0, visualise=F)
load_all(ri)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0, visualise=F)
load_all(ri)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0, visualise=F)
load_all(ri)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0, visualise=F)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0, visualise=T)
load_all(ri)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0, visualise=T)
load_all(ri)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0, visualise=T)
dists
load_all(ri)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0, visualise=T)
load_all(ri)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0, visualise=T)
draw.dist
load_all(ri)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0, visualise=T)
load_all(ri)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0, visualise=T)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0, visualise=F)
overlapping(c(.9, .8), c(.01, .01), is.F=T)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0)
load_all(ri)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0)
draw.dist
load_all(ri)
overlapping(c(.9, .8), c(.01, .01), is.F=T, cc=0)
overlapping(c(900, 1100), c(20, 20))
overlapping(c(900, 1100), c(20, 20), cc=0)
overlapping(c(900, 910), c(20, 20), cc=0)
load_all(ri)
overlapping(c(900, 910), c(20, 20), cc=0)
load_all(ri)
overlapping(c(900, 910), c(20, 20), cc=0)
overlapping(c(900, 970), c(20, 20), cc=0)
calibrate(61000, 2000, edge=F)
load_all(ri)
calibrate(61000, 2000, edge=F)
load_all(ri)
calibrate(61000, 2000, edge=F)
overlapping(c(ccurve[nrow(ccurve),2], 65e3), c(5e3, 5e3))
cc 
cc <- ccurve()
cc[nrow(cc),]
overlapping(c(50100, 55000), c(1024, 2000))
overlapping(c(50100, 55000), c(1024, 2000), cc=0)
overlapping(c(50100, 55000), c(1024, 2000), cc=1)
overlapping(c(50100, 65000), c(1024, 2000), cc=1)
overlapping(c(9000, 9400), c(20,30), res=1e6)
draw.ccurve(1800, 2020, BCAD=TRUE, cc2="nh1", cc2.postbomb=TRUE)
sessionInfo()
q()
require(rice)
draw.ccurve(1800, 2020, BCAD=TRUE, cc2="nh1", cc2.postbomb=TRUE)
draw.ccurve(1800, 2020, BCAD=TRUE, cc2="nh1")
ccurve("nh1"(
ccurve("nh1")
ccurve("nh1", postbomb=T)
draw.ccurve
draw.ccurve(1800, 2020, BCAD=TRUE, cc2="nh1")
draw.ccurve
source("~/wrong.R")
wrong()
source("~/wrong.R")
wrong()
source("~/wrong.R")
source("~/wrong.R");wrong()
draw.ccurve(1800, 2020, BCAD=TRUE, cc2="nh1")
draw.ccurve(1800, 2020, BCAD=TRUE, cc2="nh1")
draw.ccurve(1800, 2020, BCAD=TRUE, cc2="nh1", cc2.postbomb=TRUE)
draw.ccurve(1800, 2020, BCAD=TRUE, cc2="nh1")
glue.ccurves(1800, 2020, cc2="nh1"
glue.ccurves(1800, 2020, cc2="nh1")
glue.ccurves(1800, 2020, cc2="nh1")
glue.ccurves(1800, 2020, postbomb="nh1")
glue.ccurves(1800, 2020, postbomb=1)
glue.ccurves(1800, 2020, postbomb=1, cc2.post)
glue.ccurves(1800, 2020, postbomb=1)
q()
